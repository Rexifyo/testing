syntax = "proto3";
package cosmos.protocolpool.v1;

option go_package = "cosmossdk.io/x/protocolpool/types";

import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

// Budget defines the fields of a budget proposal.
message Budget {
  // recipient_address is the address of the recipient who can claim the budget.
  string recipient_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // total_budget is the total amount allocated for the budget.
  cosmos.base.v1beta1.Coin total_budget = 2;
  // claimed_amount is the total amount claimed from the total budget amount requested.
  cosmos.base.v1beta1.Coin claimed_amount = 3;
  // start_time is the time when the budget becomes claimable, represented in seconds since the Unix epoch.
  uint64 start_time = 4;
  // next_claim_from is the time when the budget was last successfully claimed or distributed,
  // represented in seconds since the Unix epoch. It is used to track the next starting claim time for fund
  // distribution. If set, it cannot be less than start_time.
  uint64 next_claim_from = 5;
  // tranches is the number of times the total budget amount is to be distributed.
  uint64 tranches = 6;
  // tranches_left is the number of tranches left for the amount to be distributed.
  uint64 tranches_left = 7;
  // Period is the time interval(number of seconds) at which funds distribution should be performed.
  // For example, if a period is set to 3600, it represents an action that
  // should occur every hour (3600 seconds).
  uint64 period = 8;
}